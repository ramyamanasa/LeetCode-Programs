Approach-1 by constraints for loop

class Solution {
public:
    bool isPowerOfFour(int n) {
        if (n>0){
            
            for (int i=1; i<31; i++){
                if(n== pow(4,i) || n==1){
                    return true;
                }
            }
        }
        
        return false;
    }
};




Approach-2 Bitwise
class Solution {
public:
    bool isPowerOfFour(int n) {
        return (n>0) && ((n&(n-1))==0) && ((n%3==1));
    }
};



Approach-3 Binary Search

class Solution {
public:
    bool isPowerOfFour(int n) {
          int low = 0;
        int high = 1e9;
        while(low<=high){
            int mid = (low+high)>>1;
            if(pow(4,mid)==n) return true;
            else if(pow(4,mid)>n) high = mid-1;
            else low = mid+1;
        }
        return false;
    }
};
