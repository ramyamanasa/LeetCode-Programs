class Solution {
public:
    
    int i,n;
    int t[100001];
    
    
    bool solve(vector<int>& nums, int i) {
        
        //Out of bound -- true
        if(i>=n){
            return true;
        }
        
        bool result = false;
        
        if(t[i] != -1){
            return t[i];
        }
        
        //rule-1 i==i+1
        if(i+1<n && nums[i]==nums[i+1]){
            result |= solve(nums,i+2);
        }
        
        //rule-2 i+2==i+1==i
        if(i+2 < n && nums[i+2]==nums[i+1] && nums[i+1]==nums[i]){
            result |= solve(nums, i+3);
        }
        
        //rule-3 i+2 - i+1 == i+1 - i == 1
        
        if(i+2 < n && nums[i+2]-nums[i+1]==1 && nums[i+1]- nums[i]==1){
            result = solve(nums, i+3);
        }
        
        return t[i]=result;
        
    }
    
    bool validPartition(vector<int>& nums) {
        
        n = nums.size();
        
        memset(t,-1, sizeof(t));
        
        return solve(nums,0);
        
        
    }
};
