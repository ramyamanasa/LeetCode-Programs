class Solution {
public:
    //resultant vector
        vector <string> result;
    
    void solve(int idx, string &digits, string &temp, unordered_map<char, string> &mp) {
        
        if(idx >= digits.length()) {
            cout<<"Yes at"<< idx;
            result.push_back(temp);
            return;
        }
        
        char ch= digits[idx];
        string str = mp[ch];
        
        for(int i=0; i<str.length(); i++){
            
            //do
            temp.push_back(str[i]);
            //explore
            solve(idx+1, digits, temp, mp);
            //undo
            temp.pop_back();
            
        }
    }
    
        
    vector<string> letterCombinations(string digits) {
        
        if (digits.length() == 0){
           return {}; 
        }
        
        //map to store corresponding letters to digits
        unordered_map<char, string> mp;
        

        mp['2'] = "abc" ;
        mp['3'] = "def" ;
        mp['4'] = "ghi" ;
        mp['5'] = "jkl" ;
        mp['6'] = "mno" ;
        mp['7'] = "pqrs";
        mp['8'] = "tuv";
        mp['9'] = "wxyz";
        
        string temp = "";
        
        
        //start from 0, until digits, store in result and using mp
        solve(0, digits, temp, mp);
        
        return result;
    }
};
